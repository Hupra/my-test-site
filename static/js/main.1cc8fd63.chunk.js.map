{"version":3,"sources":["components/Header.js","lunchbox/Grid.js","lunchbox/tools.js","components/ExamplePage.js","lunchbox/guides/ReactMustHaves.js","lunchbox/guides/NodeServerSetup.js","lunchbox/guides/MochaGuide.js","components/Setup.js","components/Repositories.js","components/ExamNotes.js","components/context_example/CompA.js","components/context_example/CompB.js","components/context_example/ContextExample.js","components/custom_fetch_hook/CustomFetchHookExample.js","components/Dummy.js","serviceWorker.js","index.js","App.js"],"names":["Header","react_default","a","createElement","className","NavLink","exact","to","React","createContext","Provider","Consumer","Brick","_ref","w","p","children","fill","flex","_ref2","gutter","columns","border","style","Object","objectSpread","marginRight","concat","marginBottom","padding","width","Grid","_ref3","testing","id","display","flexWrap","paddingLeft","paddingTop","value","qfetch","asyncToGenerator","regenerator_default","mark","_callee","url","method","content","options","json","data","_args","arguments","wrap","_context","prev","next","length","undefined","headers","Content-Type","body","JSON","stringify","fetch","sent","t0","abrupt","stop","this","_x","apply","ExamplePage","loader","react_loader_spinner_default","type","color","height","_useState","useState","_useState2","slicedToArray","setData","fetchData","_content$results","person","_person$name","first","last","title","results","name","useEffect","Grid_Grid","Grid_Brick","onClick","ReactMustHaves","Fragment","NodeServerSetup","IP","setIP","_useState3","_useState4","email","setEmail","_useState5","_useState6","domains","setDomains","placeholder","onChange","e","target","MochaGuide","Setup","props","path","match","Switch","Route","component","render","Redirect","Repository","curPath","location","pathname","substring","repo","setRepo","displayThis","full_name","size","Repositories","repos","setRepos","_callee2","orderedData","_context2","Array","isArray","map","key","Link","ExamNotes","uri","window","origin","href","CompA","_useContext","useContext","TestContext","_useContext2","msg","setMsg","console","log","CompB","ContextContainer","state","ContextExample","ContextExample_ContextContainer","context_example_CompA","context_example_CompB","CustomFetchHookExample","fetchContent","fetchedData","useFetch","CustomFetchHookExample_PrintPerson","PrintPerson","Dummy","src","frameborder","allow","allowfullscreen","Boolean","hostname","ReactDOM","Helmet","version","rel","integrity","crossOrigin","HashRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1cc8fd63.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n    return (\r\n        <header className=\"beauty_header\">\r\n            <div className=\"logo_box\">hupra.dk</div>\r\n\r\n            <nav className=\"nav1\">\r\n                <NavLink exact to=\"/\">\r\n                    Home\r\n                </NavLink>\r\n                <NavLink to=\"/setup\">Setup</NavLink>\r\n                <NavLink to=\"/repositories\">Repositories</NavLink>\r\n                <NavLink to=\"/exam-notes\">Exam Notes</NavLink>\r\n                <NavLink to=\"/context-example\">Context Example</NavLink>\r\n                <NavLink to=\"/custom-fetch-hook-example\">Custom Fetch Hook Example</NavLink>\r\n                <NavLink to=\"/dummy\">Dummy</NavLink>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nconst { Provider, Consumer } = React.createContext();\r\n\r\nexport const Brick = ({ w, p, children, fill, className }) => {\r\n    if (fill) fill = { flex: `1` };\r\n    return (\r\n        <Consumer>\r\n            {({ gutter, columns, border }) => (\r\n                <div\r\n                    style={{\r\n                        marginRight: `${gutter}px`,\r\n                        marginBottom: `${gutter}px`,\r\n                        padding: `${p}px`,\r\n                        width: `calc(${(w / columns) * 100}% - 0${gutter}px)`,\r\n                        ...border,\r\n                        ...fill\r\n                    }}\r\n                    className={className}\r\n                >\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </Consumer>\r\n    );\r\n};\r\n\r\nexport const Grid = ({ padding, gutter, children, columns, testing, className, id }) => {\r\n    if (!padding) padding = 0;\r\n    if (!gutter) gutter = 0;\r\n\r\n    const style = {\r\n        display: `flex`,\r\n        flexWrap: `wrap`,\r\n        //margin: `-${props.gutter / 2}px`,\r\n        padding: `${padding}px`,\r\n        paddingLeft: `${padding + gutter}px`,\r\n        paddingTop: `${padding + gutter}px`\r\n    };\r\n\r\n    let border = {};\r\n    if (testing) {\r\n        //add border to bricks\r\n        border = {\r\n            border: `1px dotted black`\r\n            //background: `whitesmoke`\r\n        };\r\n        //add border to grid\r\n        style.border = `1px dotted black`;\r\n        //style.background = `Gainsboro`;\r\n    }\r\n\r\n    return (\r\n        <div style={style} className={className} id={id}>\r\n            <Provider value={{ gutter, columns, border }}>{children}</Provider>\r\n        </div>\r\n    );\r\n};\r\n","//\r\n\r\nexport const qfetch = async (url, method = \"GET\", content) => {\r\n    //create option object, and add method type\r\n    const options = {\r\n        method, // *GET, POST, PUT, DELETE, etc.\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    //add content to options if set\r\n    if (content) options.body = JSON.stringify(content);\r\n\r\n    let json;\r\n    try {\r\n        const data = await fetch(url, options);\r\n        json = await data.json();\r\n    } catch (error) {\r\n        json = error;\r\n    }\r\n\r\n    return json;\r\n};\r\n\r\nconst cc = () => {\r\n    let num = 50;\r\n    let countUp = true;\r\n\r\n    const ccc = () => {\r\n        if (num > 75) countUp = false;\r\n        if (num < 25) countUp = true;\r\n\r\n        num += countUp ? 1 : -1;\r\n\r\n        document.getElementById(\r\n            \"header\"\r\n        ).style.background = `linear-gradient(90deg, rgba(255,25,25,0.${100 -\r\n            num}), rgba(255,25,25,0.50), rgba(255,25,25,0.${num})`;\r\n    };\r\n\r\n    setInterval(ccc, 150);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Grid, Brick } from \"../lunchbox/Grid\";\r\nimport { qfetch } from \"../lunchbox/tools.js\";\r\n\r\nexport default () => {\r\n    const loader = <Loader type=\"Triangle\" color=\"black\" height={20} width={20} />;\r\n\r\n    const [data, setData] = useState(loader);\r\n\r\n    const fetchData = async () => {\r\n        setData(loader);\r\n\r\n        const content = await qfetch(\"https://randomuser.me/api/\");\r\n\r\n        const [person] = content.results;\r\n        const { first, last, title } = person.name;\r\n\r\n        setData(`${title} ${first} ${last}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <Grid gutter={10} columns={12}>\r\n            <Brick>Fetched person:</Brick>\r\n            <Brick>{data}</Brick>\r\n            <Brick w={12}>\r\n                <button onClick={fetchData} style={{ padding: `10px 20px` }}>\r\n                    Fetch New Person\r\n                </button>\r\n            </Brick>\r\n        </Grid>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n    return (\r\n        <>\r\n            <h2>VSCode plugins</h2>\r\n            <ul>\r\n                <li>Sass</li>\r\n                <li>Prettier - Code formatter</li>\r\n                <li>Sass Lint</li>\r\n                <li>ESLint</li>\r\n                <li>Auto Import</li>\r\n            </ul>\r\n            <h2>Global installs</h2>\r\n            <ul>\r\n                <li>npm install -g eslint</li>\r\n            </ul>\r\n            <h2>Npm installs</h2>\r\n            <ul>\r\n                <li>npm i react@16.7.0-alpha.2 --save</li>\r\n                <li>npm i react-dom@16.7.0-alpha.2 --save</li>\r\n                <li>npm i react-router-dom --save</li>\r\n                <li>npm i node-sass --save</li>\r\n                <li>npm i react-loader-spinner --save</li>\r\n                <li>npm i react-helmet --save</li>\r\n                <li>npm i gh-pages --save</li>\r\n            </ul>\r\n            <h2>Files to create:</h2>\r\n\r\n            <blockquote>\r\n                <label>.prettierrc</label>\r\n                {\"{\"}\r\n                <p>\"usetabs\": true,</p>\r\n                <p>\"tabWidth\": 4,</p>\r\n                <p>\"printWidth\": 110</p>\r\n                {\"}\"}\r\n            </blockquote>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default () => {\r\n    const [IP, setIP] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [domains, setDomains] = useState();\r\n\r\n    const generateDummyInfo = () => {\r\n        setIP(\"XXX.XXX.XXX.XXX\");\r\n        setEmail(\"mail@mail.com\");\r\n        setDomains(\"website.com www.website.com\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Node Server Setup</h2>\r\n            <h3>1. Create a droplet</h3>\r\n            <div className=\"indent\">\r\n                <p>Go to digitalocean.com and make a new droplet from the NodeJS One-click app</p>\r\n                <p>Forward your domain(s) to the new droplet</p>\r\n            </div>\r\n\r\n            <h3>2. Fillout the following information:</h3>\r\n            <div className=\"indent\">\r\n                <input\r\n                    className=\"simpleInput\"\r\n                    type=\"text\"\r\n                    placeholder=\"Droplet IP address\"\r\n                    value={IP}\r\n                    onChange={e => setIP(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    className=\"simpleInput\"\r\n                    type=\"text\"\r\n                    placeholder=\"Valid email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    className=\"simpleInput\"\r\n                    type=\"text\"\r\n                    placeholder=\"Domain names seperated by a space\"\r\n                    value={domains}\r\n                    onChange={e => setDomains(e.target.value)}\r\n                />\r\n                <br />\r\n                <button className=\"simpleButton\" onClick={generateDummyInfo}>\r\n                    Generate dummy information\r\n                </button>\r\n            </div>\r\n            {email && IP && domains && (\r\n                <>\r\n                    <h3>3. Open a terminal and copy/paste the following commands</h3>\r\n                    <ul className=\"notes\">\r\n                        <li>\r\n                            <p>{`ssh root@${IP}`}</p>\r\n                            <span>Open server</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>apt-get install git</p>\r\n                            <span>Install git on server</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>{`ssh-keygen -t rsa -C \"${email}\"`}</p>\r\n                            <span>Create SSH key for the server</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>vim .ssh/id_rsa.pub</p>\r\n                            <span>Copy key from file and add it to your GitHub settings</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>npm install pm2 -g</p>\r\n                            <span>Install pm2</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>apt-get update</p>\r\n                            <span>Update stuff</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>apt-get install nginx</p>\r\n                            <span>Install nginx</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>nano /etc/nginx/sites-enabled/default</p>\r\n                            <span>Make sure the file looks like the below code</span>\r\n                        </li>\r\n\r\n                        <blockquote>\r\n                            <label>#Green text is modified from original file</label>\r\n                            {\"server {\"}\r\n                            <p>root /var/www/html;</p>\r\n                            <p>index index.html index.htm index.nginx-debian.html;</p>\r\n                            <p>\r\n                                server_name <span className=\"greenText\">{domains}</span>;\r\n                            </p>\r\n                            <div className=\"indent\">\r\n                                location /{\" {\"}\r\n                                <p>\r\n                                    <span className=\"greenText\">#</span>try_files $uri/ =404;\r\n                                </p>\r\n                                <p className=\"greenText\">include proxy_params;</p>\r\n                                <p className=\"greenText\">proxy_pass http://localhost:8080;</p>\r\n                                {\"}\"}\r\n                            </div>\r\n                            {\"}\"}\r\n                        </blockquote>\r\n                        <li>\r\n                            <p>sudo nginx -t</p>\r\n                            <span>Check everything is okay</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>service nginx restart</p>\r\n                            <span>Restart nginx because we changed the conf file</span>\r\n                        </li>\r\n                    </ul>\r\n                    <h3>4. Add SSL connection</h3>\r\n                    <ul className=\"notes\">\r\n                        <span>Still writing in the terminal, watchout for questions in terminal</span>\r\n                        <li>\r\n                            <p>apt-get update</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>apt-get install software-properties-common</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>add-apt-repository universe</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>add-apt-repository ppa:certbot/certbot</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>apt-get update</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>apt-get install python-certbot-nginx</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>sudo certbot --nginx</p>\r\n                        </li>\r\n                    </ul>\r\n                    <h3>5. Upload site</h3>\r\n                    <ul className=\"notes\">\r\n                        <span>Still writing in the terminal</span>\r\n                        <li>\r\n                            <p>git clone -b gh-pages git@github.com:Hupra/my-test-site.git</p>\r\n                            <span>download git project</span>\r\n                        </li>\r\n                        <li>\r\n                            <p>pm2 serve my-test-site</p>\r\n                            <span>starts downloaded project</span>\r\n                        </li>\r\n                    </ul>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n    return (\r\n        <>\r\n            <h2>Mocha</h2>\r\n            <ul className=\"notes\">\r\n                <li>\r\n                    <p>npm i mocha -g</p>\r\n                    <p>npm init -y</p>\r\n                    <p>npm i chai --save-dev</p>\r\n                </li>\r\n            </ul>\r\n            <blockquote>\r\n                <label>.prettierrc</label>\r\n                {\"{\"}\r\n                <p>\"usetabs\": true</p>\r\n                {\"}\"}\r\n            </blockquote>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport ReactMustHaves from \"../lunchbox/guides/ReactMustHaves\";\r\nimport NodeServerSetup from \"../lunchbox/guides/NodeServerSetup\";\r\nimport MochaGuide from \"../lunchbox/guides/MochaGuide\";\r\n\r\nexport default props => {\r\n    const path = props.match.path;\r\n    return (\r\n        <div className=\"splitter\">\r\n            <div className=\"hlist\">\r\n                <NavLink to={path + \"/react\"}>React</NavLink>\r\n                <NavLink to={path + \"/node-server-setup\"}>Node Server Setup</NavLink>\r\n                <NavLink to={path + \"/mocha\"}>Mocha</NavLink>\r\n            </div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path={path + \"/react\"} component={ReactMustHaves} />\r\n                    <Route path={path + \"/node-server-setup\"} component={NodeServerSetup} />\r\n                    <Route path={path + \"/mocha\"} component={MochaGuide} />\r\n\r\n                    <Route exact path={path} render={() => <Redirect to={path + \"/react\"} />} />\r\n                    <Route render={() => <h2>404 page not found</h2>} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { qfetch } from \"../lunchbox/tools.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst loader = <Loader type=\"Triangle\" color=\"black\" height={30} width={30} />;\r\n\r\nconst Repository = props => {\r\n    //find current ending of current path NEEDS TESTING WHEN DEPLOYED\r\n    const curPath = props.location.pathname.substring(props.match.path.length + 1);\r\n\r\n    const [repo, setRepo] = useState(\"No Repository Selected\");\r\n\r\n    const fetchData = async name => {\r\n        setRepo(loader);\r\n        const content = await qfetch(\"https://api.github.com/repos/Cphdat3sem2018f/\" + name);\r\n\r\n        const displayThis = (\r\n            <div>\r\n                <div>ID: {content.id}</div>\r\n                <div>Full name: {content.full_name}</div>\r\n                <div>Size: {content.size}</div>\r\n            </div>\r\n        );\r\n\r\n        setRepo(displayThis);\r\n    };\r\n\r\n    useEffect(\r\n        () => {\r\n            // only fetch if pathname is valid\r\n            if (curPath) fetchData(curPath);\r\n        },\r\n        [curPath]\r\n    );\r\n\r\n    return repo;\r\n};\r\n\r\nexport default () => {\r\n    const [repos, setRepos] = useState(loader);\r\n\r\n    const fetchData = async () => {\r\n        setRepos(loader);\r\n\r\n        const content = await qfetch(\"https://api.github.com/orgs/Cphdat3sem2018f/repos\");\r\n        let orderedData = \"Database failure\";\r\n\r\n        if (Array.isArray(content)) {\r\n            orderedData = content.map(e => (\r\n                <li key={e.id}>\r\n                    <Link to={`/repositories/${e.name}`}>{e.name}</Link>\r\n                </li>\r\n            ));\r\n        }\r\n\r\n        setRepos(<ul>{orderedData}</ul>);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h2>Repositories</h2>\r\n            <p>\r\n                Complete this example to fecth the git-repositories (via link provided in the exercise), and\r\n                populate the ul below with the name for each repository.\r\n            </p>\r\n            <hr />\r\n\r\n            <div className=\"splitter\">\r\n                <div>\r\n                    <h3>All repositories:</h3>\r\n                    {repos}\r\n                </div>\r\n                <div>\r\n                    <h3>Selected repository:</h3>\r\n                    <Route name=\"repositories/:value\" component={Repository} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n    const uri = window.location.origin;\r\n    return (\r\n        <>\r\n            <h2>Exam Notes</h2>\r\n            <h3>Static Javascript Pages</h3>\r\n            <ul>\r\n                <li>\r\n                    <a href={uri + \"/javascript-pages/calculator.html\"}>Calculator</a>\r\n                </li>\r\n                <li>\r\n                    <a href={uri + \"/javascript-pages/map.html\"}>Map</a>\r\n                </li>\r\n                <li>\r\n                    <a href={uri + \"/javascript-pages/dataGenerator.html\"}>Data Generator</a>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { TestContext } from \"./ContextExample\";\r\n\r\nconst CompA = () => {\r\n    const [msg, setMsg] = useContext(TestContext);\r\n\r\n    console.log(\"CompA.js\");\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <div>CompA: {msg}</div>\r\n            <input type=\"text\" value={msg} onChange={e => setMsg(e.target.value)} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompA;\r\n","import React, { useContext } from \"react\";\r\nimport { TestContext } from \"./ContextExample\";\r\n\r\nconst CompB = () => {\r\n    const [msg, setMsg] = useContext(TestContext);\r\n\r\n    console.log(\"CompB.js\");\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <div>CompB: {msg}</div>\r\n            <input type=\"text\" value={msg} onChange={e => setMsg(e.target.value)} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompB;\r\n","import React, { createContext, useState } from \"react\";\r\nimport CompA from \"./CompA\";\r\nimport CompB from \"./CompB\";\r\n\r\nexport const TestContext = createContext();\r\n\r\nconst ContextExample = () => {\r\n    //make state here if you want this component to update on change\r\n\r\n    console.log(\"ContextExample.js\");\r\n\r\n    return (\r\n        <ContextContainer>\r\n            <h3>Shared state between CompA and CompB</h3>\r\n            <CompA />\r\n            <CompB />\r\n        </ContextContainer>\r\n    );\r\n};\r\n\r\nconst ContextContainer = ({ children }) => {\r\n    const state = useState(\"start msg\");\r\n    return <TestContext.Provider value={state}>{children}</TestContext.Provider>;\r\n};\r\n\r\nexport default ContextExample;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nconst loader = <Loader type=\"Triangle\" color=\"black\" height={30} width={30} />;\r\n\r\nconst useFetch = url => {\r\n    const [data, setData] = useState();\r\n\r\n    const fetchContent = async () => {\r\n        const fetchedData = await fetch(url);\r\n        const json = await fetchedData.json();\r\n        setData(json);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchContent();\r\n    }, []);\r\n\r\n    return data;\r\n};\r\n\r\nexport default () => {\r\n    const data = useFetch(\"https://randomuser.me/api/\");\r\n\r\n    const content = data ? <PrintPerson person={data.results[0]} /> : loader;\r\n\r\n    return <div>{content}</div>;\r\n};\r\n\r\nconst PrintPerson = ({ person }) => {\r\n    return (\r\n        <div>\r\n            <div>firstname: {person.name.first}</div>\r\n            <div>lastname: {person.name.last}</div>\r\n            <hr />\r\n            <pre className=\"prettyprint lang-json\">\r\n                <code>{JSON.stringify(person, null, 4)}</code>\r\n            </pre>\r\n            <pre className=\"prettyprint\">\r\n                <code className=\"language-js\">console.log(5);</code>\r\n            </pre>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n    const uri = window.location.origin;\r\n    return (\r\n        <>\r\n            <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src=\"https://www.youtube.com/embed/vYFYcoKm9_Y\"\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n            />\r\n        </>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./lunchbox/default.sass\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <>\r\n        <Helmet>\r\n            <title>{React.version}</title>\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\"\r\n                integrity=\"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\"\r\n                crossOrigin=\"anonymous\"\r\n            />\r\n        </Helmet>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport ExamplePage from \"./components/ExamplePage.js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Grid, Brick } from \"./lunchbox/Grid\";\r\nimport Setup from \"./components/Setup\";\r\nimport Repositories from \"./components/Repositories\";\r\nimport ExamNotes from \"./components/ExamNotes\";\r\nimport ContextExample from \"./components/context_example/ContextExample\";\r\nimport CustomFetchHookExample from \"./components/custom_fetch_hook/CustomFetchHookExample\";\r\nimport Dummy from \"./components/Dummy\";\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"content\">\r\n                <Route exact path=\"/\" component={ExamplePage} />\r\n                <Route path=\"/setup\" component={Setup} />\r\n                <Route path=\"/repositories\" component={Repositories} />\r\n                <Route path=\"/exam-notes\" component={ExamNotes} />\r\n                <Route path=\"/context-example\" component={ContextExample} />\r\n                <Route path=\"/custom-fetch-hook-example\" component={CustomFetchHookExample} />\r\n                <Route path=\"/dummy\" component={Dummy} />\r\n\r\n                <Route exact path=\"/about\" render={() => <div>This is the about page</div>} />\r\n                <Route\r\n                    exact\r\n                    path=\"/contact\"\r\n                    render={() => (\r\n                        <Grid columns={12} gutter={40} testing>\r\n                            <Brick>Blah, blah, blah contact</Brick>\r\n                        </Grid>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"sourceRoot":""}